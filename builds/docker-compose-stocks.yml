version: '3.2'

services:

  marketapi:
    container_name: MarketAPI
    build:
      context: ..
      dockerfile: Market/Dockerfile
    ports:
        - "8002:80"
    volumes:
      - type: bind
        source: ../Market/Logs
        target: /app/Logs
    environment:
        ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      - database
    restart: always
    networks:
      - stocks

  stocksapi:
    container_name: StocksAPI
    build: 
      context: ..
      dockerfile: StocksAPI/Dockerfile
    ports:
        - "8000:80"
        - "8001:1234"
    volumes:
      - type: bind
        source: ../StocksAPI/Logs
        target: /app/Logs
    environment:
        ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      - database
    restart: always
    networks:
      - stocks

  userinterface:
    container_name: FrontEndInterface
    build:
      context: ../stocks-frontend
      dockerfile: Dockerfile
    ports:
      - "6060:8080"
    depends_on:
      - stocksapi
    restart: always
    networks:
      - stocks

  prometheus:
    container_name: Prometheus
    image: prom/prometheus:v2.40.6
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - database
      - stocksapi
      - marketapi
    networks:
      - stocks

  grafana:
    container_name: Grafana
    image: grafana/grafana-enterprise:9.3.1
    ports:
      - "3001:3000"  
    volumes:
      - ./Grafana/datasources:/etc/grafana/provisioning/datasources 
      - ./Grafana/Stocks/components:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - stocks

  database:
    # For setup: https://hub.docker.com/_/postgres
    container_name: PostgresDB
    image: postgres:15.1-alpine
    restart: always
    volumes:
      - ./Database/Postgres/Stocks:/var/lib/postgresql/data
      - ./Database/Postgres/StocksSeed:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: stocks
    ports:
      - "5432:5432"
    networks:
      - stocks

  pgadmin:
    # For setup: https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
    container_name: PGAdmin4
    image: dpage/pgadmin4:6.17
    restart: always
    environment: 
      # For the server host it will be: host.docker.internal
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - database
    volumes:
      - ./Database/Postgres/PgAdmin:/var/lib/pgadmin
    networks:
      - stocks

  cachedb:
    container_name: RedisDB
    image: redis:7.0.9-bullseye
    restart: always
    environment:
      REDIS_PASSWORD: admin
    ports:
      - "5433:6379"
    volumes:
      - ./Database/Redis/local-data:/data 
    depends_on:
      - stocksapi
    networks:
      - stocks

networks:
    stocks:
        driver: bridge